name: CI

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: develop-library_management-${{ github.event.number }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: self-hosted
    strategy:
      fail-fast: false
    name: build

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Build Docker images
        run: |
          docker-compose build --force-rm --no-cache

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14
          check-latest: true

      - name: Install Yarn
        run: |
          npm install -g yarn

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/*requirements.txt', '**/pyproject.toml', '**/setup.py', '**/setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: 'echo "::set-output name=dir::$(yarn cache dir)"'

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Setup
        run: |
          pip install -U frappe-bench
      - name: Setup Bench
        run: |
          bench init --skip-redis-config-generation --skip-assets --python "$(which python)" ./frappe-bench
          mysql --host mariadb --port 3306 -u root -proot -e "SET GLOBAL character_set_server = 'utf8mb4'"
          mysql --host mariadb --port 3306 -u root -proot -e "SET GLOBAL collation_server = 'utf8mb4_unicode_ci'"

      - name: Update Browser list
        working-directory: ./frappe-bench
        run: |
          cd apps/frappe && npx browserslist@latest --update-db

      - name: Install
        working-directory: ./frappe-bench
        run: |
          bench get-app library_management $GITHUB_WORKSPACE
          bench new-site --db-root-password root --admin-password admin tenants.psami.com --no-mariadb-socket
          bench --site tenants.psami.com install-app library_management
          bench --site tenants.psami.com add-to-hosts
          bench set-config -g redis_cache redis://redis-cache:6379
          bench set-config -g redis_queue redis://redis-queue:6379
          bench set-config -g redis_socketio redis://redis-socketio:6379
        env:
          CI: "Yes"

      - name: Run Tests
        working-directory: ./frappe-bench
        run: |
          bench --site tenants.psami.com set-config allow_tests true
          bench --site tenants.psami.com run-tests --app library_management
        env:
          TYPE: server

  run:
    runs-on: self-hosted

    needs:
      - build

    steps:
      - name: Run Docker images
        run: |
          docker-compose up -d --remove-orphans
